precision mediump float;

/* Rendu du jeu */
uniform sampler2D uSampler;

/* Texture de déformation en rouge et vert */
uniform sampler2D uDeformation;

/* Texture pour contrôler l'intensité de la déformation */
uniform sampler2D uIntensity;

/* Interval de temps multiplié par la vitesse depuis l'activation du composant */
uniform float uTime;

/* Échelle de la déformation */
uniform float uScale;

/* Coordonnées UV du fragment */
varying vec2 vTextureCoord;


void main(void) {
    vec2 vec;
    vec.x = uTime;
    vec.y = 0.5;
    vec2 intensityVec = texture2D(uIntensity,vec).xy * uScale;
    vec2 defVec = (texture2D(uDeformation,vTextureCoord + sin(uTime)).xy + vec2(-0.25,-0.25)) * intensityVec;
    gl_FragColor = texture2D(uSampler, vTextureCoord + defVec);
    gl_FragColor.gb = gl_FragColor.gb * (1.0 - intensityVec.x * 5.0);
}
